{"version":3,"sources":["../node_modules/@turf/helpers/dist/es/index.js","networkControl/networkControlWorker.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["earthRadius","factors","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","unitsFactors","areaFactors","acres","hectares","feature","geom","properties","options","feat","type","id","bbox","geometry","coordinates","_options","point","lineString","polygon","multiPoint","multiLineString","multiPolygon","Error","Array","isArray","length","isNumber","points","featureCollection","map","coords","_i","coordinates_1","ring","j","polygons","lineStrings","features","fc","geometryCollection","geometries","round","num","precision","multiplier","Math","pow","radiansToLength","units","factor","lengthToRadians","distance","lengthToDegrees","radiansToDegrees","bearingToAzimuth","bearing","angle","PI","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","finalFactor","isNaN","isObject","input","constructor","Object","validateBBox","forEach","validateId","indexOf","workerMasterNetwork","workerMasterPointNetwork","workerIds","networkIndex","networkTree","name","netowrkTimeCheck","Date","now","self","addEventListener","e","data","slice","linestring","turf","line","push","geojsonPrecision","geometryTypeCheck","reduce","i","f","error","console","log","warn","alert","index","up","featureId","networkFeatureCollection","networkLines","networkBuild","splitMultiLine","array","a","lines","network","string","direction","networkPoints","netowrkDirection","tempFeatures","p","tempFeatures02","postMessage","networkSeed","pointInLineVertices","c","d","b","Set","t","coordinatePrecision","extrasPrecision","toFixed","multi","l","poly","multiPoly","m","obj","_featureCollection","g","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"networkControlWorker.4276a40e.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","// 2.108 SECONDS WITH 3537 FEATURES\r\n// JavaScript toFixed() is very slow,\r\n\r\n// self.importScripts('./turf.min.js');\r\n\r\nimport * as turf from \"@turf/helpers\"\r\n\r\nvar workerMasterNetwork = {\r\n  type: \"FeatureCollection\",\r\n  features: []\r\n}\r\n\r\nvar workerMasterPointNetwork = {\r\n  type: \"FeatureCollection\",\r\n  features: []\r\n}\r\n\r\nvar workerIds = [];\r\n\r\nvar networkIndex = [];\r\n\r\nvar networkTree = {\r\n  type: \"FeatureCollection\",\r\n  name: \"networkTree\",\r\n  features: []\r\n}\r\n\r\nvar netowrkTimeCheck = Date.now();\r\n\r\nself.addEventListener('message', function(e) {\r\n  // LOG ANY MESSAGES FOR DEBUGGING\r\n  // this.console.log(e)\r\n\r\n  if (e.data.features && e.data.name === \"network\") {\r\n\r\n    workerMasterNetwork.features = (e.data.features).slice();\r\n\r\n    var linestring = turf.featureCollection([]);\r\n    workerMasterNetwork.features.map(feature => {\r\n      if (feature.geometry.coordinates[0][0].length) {\r\n        feature.geometry.coordinates.map(line => {\r\n          linestring.features.push(turf.lineString(geojsonPrecision(line,8)))\r\n        })\r\n      }else{\r\n        linestring.features.push(geojsonPrecision(feature,8))\r\n      }\r\n    })\r\n    workerMasterNetwork.features = (linestring.features).slice();\r\n    // console.log(workerMasterNetwork)\r\n\r\n    var geometryTypeCheck = true;\r\n\r\n    //CHECKING THAT THE CONVERSION WORKED\r\n    workerMasterNetwork.features.reduce((i,f) => {\r\n      if (f.geometry.type != \"LineString\") error = true;\r\n      return [...i, f.geometry.type]\r\n    },[]);\r\n\r\n    if (geometryTypeCheck) {\r\n      console.log(\"all geometries are linestrings, the tool should work\")\r\n    }else{\r\n      console.warn(\"all geometries are not linestrings, the tool may break\");\r\n      alert(\"all geometries are not linestrings, the tool may break\")\r\n    }\r\n\r\n    this.console.log(\"worker added\", workerMasterNetwork.features.length, \"features to the master linear network \")\r\n  }\r\n\r\n  if (e.data.features && e.data.name === \"pointNetwork\") {\r\n    workerMasterPointNetwork.features = (e.data.features).slice()\r\n    this.console.log(\"worker added\", workerMasterPointNetwork.features.length, \"features to the master point network \")\r\n  }\r\n\r\n  if (!e.data.features && e.data.geometry && e.data.geometry.type === \"Point\") {\r\n    console.log(\"received network trace request\", e.data)\r\n    // GRAB CURRENT TIME TO CHECK DURATION OF NETWORK TRACE\r\n    netowrkTimeCheck = Date.now();\r\n\r\n    // RESET NETWORK TREE & WORKER IDS\r\n    networkTree.features = [];\r\n    \r\n    workerIds = new Array(workerMasterNetwork.features.length)\r\n    networkIndex = new Array(workerMasterNetwork.features.length)\r\n\r\n    networkIndex[e.data.properties.index] = {\r\n      up: [e.data.properties.index]\r\n    }\r\n\r\n    var featureId = e.data.properties.index;\r\n    \r\n    //GET SEED FEATURES\r\n    var networkFeatureCollection = networkLines(e.data, workerMasterNetwork, null, featureId)\r\n\r\n    networkTree.features = networkFeatureCollection.features.slice(0);\r\n\r\n    //BUILD NETWORK\r\n    networkBuild(networkFeatureCollection, workerMasterNetwork, e.data.name)\r\n\r\n  }\r\n\r\n}, false);\r\n\r\nfunction splitMultiLine(array) {\r\n  return array.reduce((i,a) => {\r\n    return [...i,...a]\r\n  },[])\r\n}\r\n\r\nfunction networkBuild(lines, network, string) {\r\n  let direction = string;\r\n  // GET ALL UPSTREAM POINTS\r\n  var networkPoints = [];\r\n\r\n  if (direction === \"upstream\" || direction === \"downstream\") {\r\n    // IGNORE LATERALS\r\n    lines.features.map(function (f,i) {\r\n      var coords = (f.geometry.coordinates[0][0].length) ? splitMultiLine(f.geometry.coordinates) : f.geometry.coordinates;\r\n      var netowrkDirection = (direction === \"upstream\") ? 0 : coords.length - 1;\r\n      networkPoints.push(coords[netowrkDirection]);\r\n    });\r\n  }else{\r\n    //INCLUDE LATERALS\r\n    lines.features.map(function (f) {\r\n      var coords = (f.geometry.coordinates[0][0].length) ? splitMultiLine(f.geometry.coordinates) : f.geometry.coordinates;\r\n      for (var i = 0; i < coords.length; i++) {   \r\n        networkPoints.push(f.geometry.coordinates[i]);\r\n      }\r\n    });\r\n  }\r\n \r\n  var tempFeatures = {\r\n    type: \"FeatureCollection\",\r\n    features: []\r\n  };\r\n\r\n  // GET NETWORK LINES FROM THESE POINTS\r\n  for (let p = 0; p < networkPoints.length; p++) {\r\n    var point = turf.point(networkPoints[p]);\r\n    var tempFeatures02 = networkLines(point, network, direction);\r\n    tempFeatures02.features.map(f => {\r\n      tempFeatures.features.push(f);\r\n      networkTree.features.push(f)\r\n    });\r\n  }\r\n  if (tempFeatures.features.length > 0) {\r\n    networkBuild(tempFeatures, network, direction);\r\n  }else{\r\n    console.warn(\"worker network trace took\", Date.now() - netowrkTimeCheck, \"ms\")\r\n    self.postMessage(networkTree);\r\n  }\r\n}\r\n\r\nfunction networkLines(point, network, string, id) {\r\n  var point = point;\r\n  var a = point.geometry.coordinates\r\n  let direction = (!string) ? point.name : string;\r\n  var networkSeed = [];\r\n  for (var i = 0; i < network.features.length; i++) {\r\n\r\n    if (workerIds[i]) {\r\n      continue\r\n    }\r\n\r\n    var f = network.features[i];\r\n\r\n    //TEST REPLACEMENT FOR POINT ON LINE booleanOnLine = 1500s, without = 0.200s\r\n    var pointInLineVertices = false;\r\n    f.geometry.coordinates.map(c => {\r\n      if (a[0] == c[0] && a[1] == c[1]) pointInLineVertices = true\r\n    })\r\n\r\n    if (pointInLineVertices) {\r\n    // if (turf.booleanPointOnLine(point, f)) {\r\n      var d = (direction === \"upstream\" || direction === \"upstream-laterals\") ? 0 : f.geometry.coordinates.length - 1;\r\n      var b = f.geometry.coordinates[d];\r\n      if ( (a[0] != b[0]) || (a[1] != b[1]) ) {\r\n\r\n        workerIds[i] = 1;\r\n        networkSeed.push(f);\r\n        if (!networkIndex[id]) {\r\n          networkIndex[id] = {\r\n            up: [i]\r\n          }\r\n        }else{\r\n          networkIndex[id].up = [i, ...new Set(networkIndex[id].up)]\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  return turf.featureCollection(networkSeed)\r\n\r\n}\r\n\r\n\r\nfunction geojsonPrecision(t, coordinatePrecision, extrasPrecision) {\r\n\r\n  function point(p) {\r\n    return p.map(function (e, index) {\r\n      if (index < 2) {\r\n        return 1 * e.toFixed(coordinatePrecision);\r\n      } else {\r\n        return 1 * e.toFixed(extrasPrecision);\r\n      }\r\n    });\r\n  }\r\n\r\n  function multi(l) {\r\n    return l.map(point);\r\n  }\r\n\r\n  function poly(p) {\r\n    return p.map(multi);\r\n  }\r\n\r\n  function multiPoly(m) {\r\n    return m.map(poly);\r\n  }\r\n\r\n  function geometry(obj) {\r\n    if (!obj) {\r\n      return {};\r\n    }\r\n\r\n    switch (obj.type) {\r\n      case \"Point\":\r\n        obj.coordinates = point(obj.coordinates);\r\n        return obj;\r\n      case \"LineString\":\r\n      case \"MultiPoint\":\r\n        obj.coordinates = multi(obj.coordinates);\r\n        return obj;\r\n      case \"Polygon\":\r\n      case \"MultiLineString\":\r\n        obj.coordinates = poly(obj.coordinates);\r\n        return obj;\r\n      case \"MultiPolygon\":\r\n        obj.coordinates = multiPoly(obj.coordinates);\r\n        return obj;\r\n      case \"GeometryCollection\":\r\n        obj.geometries = obj.geometries.map(geometry);\r\n        return obj;\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  function feature(obj) {\r\n    obj.geometry = geometry(obj.geometry);\r\n    return obj\r\n  }\r\n\r\n  function _featureCollection(f) {\r\n    f.features = f.features.map(feature);\r\n    return f;\r\n  }\r\n\r\n  function geometryCollection(g) {\r\n    g.geometries = g.geometries.map(geometry);\r\n    return g;\r\n  }\r\n\r\n  if (!t) {\r\n    return t;\r\n  }\r\n\r\n  switch (t.type) {\r\n    case \"Feature\":\r\n      return feature(t);\r\n    case \"GeometryCollection\":\r\n      return geometryCollection(t);\r\n    case \"FeatureCollection\":\r\n      return _featureCollection(t);\r\n    case \"Point\":\r\n    case \"LineString\":\r\n    case \"Polygon\":\r\n    case \"MultiPoint\":\r\n    case \"MultiPolygon\":\r\n    case \"MultiLineString\":\r\n      return geometry(t);\r\n    default:\r\n      return t;\r\n  }\r\n\r\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}