parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"tMw6":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;class t{constructor(t){console.log({networkTraceOptions:t.options});const e=t.options,o=t?t.options.originPoints:{},s=t?t.options.linearNetwork:{},i=t?t.options.originLayer:"",n=t?t.options.color:"yellow";var a={type:"FeatureCollection",features:[]};a.features=s.features.slice(0),a.name="network";const r={type:"FeatureCollection",features:[]};let l="upstream";var c,d=function(){c=setTimeout(function(){document.getElementById("loading").classList.add("loading")},300)};this.onAdd=function(t){this._map=t;var s=t;const h=new Worker("/geojson-network-control/networkControlWorker.4db17e4d.js");function u(t){s.moveLayer("workerHalo"),s.moveLayer("worker");var e=s.queryRenderedFeatures(t.point,{layers:[i]});if(e&&e.length>0){d();var n=o.features[e[0].id];return n.name=l,void h.postMessage(n)}}return h.addEventListener("message",function(t){t.data.name&&"networkTree"===t.data.name&&(console.log({data:t.data}),s.getSource("worker").setData(t.data),document.getElementById("loading").classList.remove("loading"),clearTimeout(c))},!1),h.postMessage(a),o.name="pointNetwork",h.postMessage(o),s.addSource("worker",{type:"geojson",data:r}),s.addLayer({id:"workerHalo",type:"line",source:"worker",paint:{"line-color":n,"line-width":8,"line-opacity":.6}}),s.addLayer({id:"worker",type:"line",source:"worker",paint:{"line-color":n,"line-width":4,"line-opacity":1}}),s.on("click",function(t){this.getSource("worker").setData(r)}),this._btn=document.createElement("button"),this._btn.type="button",this._btn["aria-label"]="Location Control",this._btn.title="Trace Network",this._btn.id="networkControlBtn",this._btn.style.lineHeight="0px",this._btn.innerHTML="<img src='https://icongr.am/material/vector-polyline.svg' with='80%' height='80%'> Click to start Tracing",this._btn.style.padding="15px",this._btn.style.width="auto",this._btn.onclick=function(){e.debug&&!0===e.debug&&console.warn("debugging is on"),s.getSource("worker").setData(r);return l="upstream",console.log("tracing:",l),this.classList.contains("upstream")||this.classList.contains("downstream")?this.classList.contains("upstream")&&!this.classList.contains("laterals")?(this.classList.add("laterals"),l="upstream-laterals",this.style.backgroundColor="red",this.style.color="white",this.innerText="Click a point to trace upstream with laterals",void s.on("click",u)):this.classList.contains("upstream")&&this.classList.contains("laterals")?(this.classList.remove("upstream"),this.classList.remove("laterals"),this.classList.add("downstream"),l="downstream",this.style.backgroundColor="orange",this.style.color="initial",this.innerText="Click a point to trace downstream",void s.on("click",u)):this.classList.contains("downstream")?(this.classList.remove("downstream"),this.style.backgroundColor="white",this.innerText="Click to start tracing",void s.off("click",u)):void 0:(this.classList.add("upstream"),this.style.backgroundColor="skyblue",this.innerText="Click a point to trace upstream",void s.on("click",u))},this._container=document.createElement("div"),this._container.style.width="auto",this._container.id="networkControl",this._container.className="mapboxgl-ctrl mapboxgl-ctrl-group",this._container.appendChild(this._btn),this._container},this.onRemove=function(){this._container.parentNode.removeChild(this._container),this._map=void 0,networkMap=void 0}}}var e=t;exports.default=e;
},{"./networkControlWorker.js":[["networkControlWorker.4db17e4d.js","lxYn"],"networkControlWorker.4db17e4d.js.map","lxYn"]}],"A2T1":[function(require,module,exports) {
"use strict";var e,t,o,n,r=i(require("./networkControl/networkControl.js"));function i(e){return e&&e.__esModule?e:{default:e}}n=!1;var a=new mapboxgl.Map({container:"map",hash:!0,style:{version:8,name:"blank",sources:{none:{type:"vector",url:""}},layers:[{id:"background",type:"background",paint:{"background-color":"whitesmoke"}}]},center:[-82.00991,39.94092],zoom:14,debug:1});async function s(){try{return await Promise.all([fetch("data/lines.geojson").then(e=>e.json()),fetch("data/points.geojson").then(e=>e.json())])}catch(e){console.log(e)}}function l(n){n[0].features.map(function(e,t){e.properties.color="#202020",e.properties.index=t,e.id=t}),e={type:"FeatureCollection",features:[]},n[0].features.map(function(t){"Private"!=t.properties.class&&e.features.push(t)}),o={type:"FeatureCollection",features:e.features.slice(0)},u(a,"geojsonLines","line",e,"color",4),a.setFilter("geojsonLines",["!=",["get","subclass"],"Lateral"]),console.log("line data loaded"),n[1].features.map(function(e,t){e.properties.index=t,e.id=t}),t={type:"FeatureCollection",features:n[1].features.slice()},u(a,"points","circle",t,"#202020",{stops:[[12,3],[22,8]]}),a.setFilter("points",["!=",["get","class"],"Tap"]),console.log("point data loaded"),a.addControl(new r.default({options:{originPoints:t,linearNetwork:o,originLayer:"points",color:"cyan",debug:!0}}),"top-right"),document.querySelector("#networkControlBtn").click()}a.on("load",function(){s().then(e=>{l(e)})});var c=null;function u(e,t,o,n,r,i){var s;s=i||"fill"!==o?"line"===o?{"line-color":["case",["boolean",["feature-state","highlight"],!1],"#00ffff",["get","color"]],"line-width":i}:{"circle-color":["case",["boolean",["feature-state","highlight"],!1],"#00ffff",r],"circle-radius":i,"circle-stroke-width":3,"circle-stroke-opacity":.9,"circle-stroke-color":"white"}:{"fill-color":r,"fill-opacity":.5,"fill-outline-color":"transparent"},e.addLayer({id:t,type:o,source:{type:"geojson",data:n},paint:s}),e.on("mouseenter",t,function(){a.getCanvas().style.cursor="pointer"}),e.on("mouseleave",t,function(){a.getCanvas().style.cursor=""})}a.on("mouseenter","points",function(e){e.features.length>0&&(c&&a.setFeatureState({source:"points",id:c},{highlight:!1}),c=e.features[0].id,a.setFeatureState({source:"points",id:c},{highlight:!0}),n=!0)}),a.on("mouseleave","points",function(){c&&(a.setFeatureState({source:"points",id:c},{highlight:!1}),c=null)});
},{"./networkControl/networkControl.js":"tMw6"}]},{},["A2T1"], null)
//# sourceMappingURL=/geojson-network-control/app.679ca94a.js.map